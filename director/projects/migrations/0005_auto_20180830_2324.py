# Generated by Django 2.0.8 on 2018-08-30 23:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

ACCOUNT_ADMIN_NAME = 'admin'

PERMISSION_VIEW = 'view'
PERMISSION_COMMENT = 'comment'
PERMISSION_SUGGEST = 'suggest'
PERMISSION_EDIT = 'edit'
PERMISSION_MANAGE = 'manage'
PERMISSION_OWN = 'own'


def create_default_permission_roles(apps, schema_editor):
    """
    Create the default permissions. The enum describing the permissions may have changed since this migration was
    created so they are hardcoded here. Future migrations should remove the permissions if required.
    """
    ProjectPermission = apps.get_model('projects', 'ProjectPermission')
    ProjectRole = apps.get_model('projects', 'ProjectRole')

    permissions = (
        ('Viewer', (PERMISSION_VIEW,)),
        ('Reader', (PERMISSION_VIEW, PERMISSION_COMMENT)),
        ('Reviewer', (PERMISSION_VIEW, PERMISSION_COMMENT, PERMISSION_SUGGEST)),
        ('Editor', (PERMISSION_VIEW, PERMISSION_COMMENT, PERMISSION_SUGGEST, PERMISSION_EDIT)),
        ('Manager', (PERMISSION_VIEW, PERMISSION_COMMENT, PERMISSION_SUGGEST, PERMISSION_EDIT, PERMISSION_MANAGE)),
        ('Owner',
         (PERMISSION_VIEW, PERMISSION_COMMENT, PERMISSION_SUGGEST, PERMISSION_EDIT, PERMISSION_MANAGE, PERMISSION_OWN))
    )

    for role_name, permission_types in permissions:
        role, created = ProjectRole.objects.get_or_create(name=role_name)

        if not created:
            role.permissions.clear()

        for permission_type in permission_types:
            permission, created = ProjectPermission.objects.get_or_create(type=permission_type)
            role.permissions.add(permission)

        role.save()


def assign_projects_to_accounts(apps, schema_editor):
    """
    After the `Account` field is added, the `Project` needs to be assigned to an account. This should be the single
    personal `Account` that the prior migration created
    """
    Project = apps.get_model('projects', 'Project')
    AccountRole = apps.get_model('accounts', 'AccountRole')
    AccountUserRole = apps.get_model('accounts', 'AccountUserRole')

    projects = Project.objects.all()

    admin_role = AccountRole.objects.get(name=ACCOUNT_ADMIN_NAME)

    for project in projects:
        user = project.creator
        account_user_role = AccountUserRole.objects.get(user=user, role=admin_role)
        project.account = account_user_role.account
        project.save()


class Migration(migrations.Migration):
    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
        ('projects', '0004_project_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(
                    choices=[('VIEW', 'view'), ('COMMENT', 'comment'), ('SUGGEST', 'suggest'), ('EDIT', 'edit'),
                             ('MANAGE', 'manage'), ('OWN', 'own')], unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('permissions', models.ManyToManyField(related_name='roles', to='projects.ProjectPermission')),
            ],
        ),
        migrations.CreateModel(
            name='UserProjectRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.PositiveIntegerField()),
                ('content_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projects',
                                    to='accounts.Account'),
        ),
        migrations.AddField(
            model_name='userprojectrole',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles',
                                    to='projects.Project'),
        ),
        migrations.AddField(
            model_name='userprojectrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+',
                                    to='projects.ProjectRole'),
        ),
        migrations.AddField(
            model_name='userprojectrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_roles',
                                    to=settings.AUTH_USER_MODEL),
        ),
        migrations.RunPython(create_default_permission_roles),
        migrations.RunPython(assign_projects_to_accounts)
    ]

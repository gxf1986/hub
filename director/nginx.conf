# Nginx config
# 
# See `sudo tail /var/log/nginx/error.log` for errors with this config

server {
    # Redirect HTTP traffic to HTTPS
    #   http://stenci.la -> https://stenci.la
    #   http://www.stenci.la -> https://stenci.la
    server_name stenci.la www.stenci.la;
    listen 80;
    return 301 https://stenci.la$request_uri;
}

server {
    # Redirect HTTPS WWW
    #   https://www.stenci.la -> https://stenci.la
    server_name www.stenci.la;
    listen 443 ssl;
    ssl_certificate     /srv/stencila/hub/secrets/stencila-ssl.crt;
    ssl_certificate_key /srv/stencila/hub/secrets/stencila-ssl.key;
    return 301 https://stenci.la$request_uri;
}

server {
    server_name stenci.la;
    listen              443 ssl;
    ssl_certificate     /srv/stencila/hub/secrets/stencila-ssl.crt;
    ssl_certificate_key /srv/stencila/hub/secrets/stencila-ssl.key;

    # Deny illegal host headers
    # This avoids hackers scanning IP address with spoofed host names and
    # avoids Django sending lots of SuspiciousOperation "Invalid HTTP_HOST header" emails
    # See http://stackoverflow.com/questions/15238506/djangos-suspiciousoperation-invalid-http-host-header/17477436
    # Adds 10.0.1.25 for testing with Vagrant
    # Adds localhost for testing during development
    if ($host !~* ^(stenci.la|www.stenci.la|10.0.1.25|localhost)$ ) {
        return 444;
    }

    # Ngix log locations
    access_log /srv/stencila/hub/director/logs/nginx-access.log;
    error_log /srv/stencila/hub/director/logs/nginx-error.log;

    # Allow for large POSTs
    # This is needed for pushing large repositories and potentially
    # later on for large file uploads
    # See 
    #   http://wiki.nginx.org/HttpCoreModule#client_max_body_size
    #   http://cnedelcu.blogspot.co.nz/2013/09/nginx-error-413-request-entity-too-large.html
    client_max_body_size 50M;

    # Standard files served directly
    location /favicon.ico {
        alias /srv/stencila/hub/director/static/favicon.png;
    }
    location /robots.txt {
        alias /srv/stencila/hub/director/static/robots.txt;
    }

    # Error pages
    # These are templates that may also get rendered by Django 
    # with more information if an error is captured there but
    # which are served up directly by Nginx if the error occurs
    # somewhere else.
    error_page 403 /internal-error/403.html;
    error_page 404 /internal-error/404.html;
    error_page 405 /internal-error/405.html;
    error_page 500 /internal-error/405.html;
    error_page 501 502 503 504 /internal-error/5xx.html;
    location ^~ /internal-error/ {
        internal;
        alias /srv/stencila/hub/director/general/templates/;
    }

    # Serve Django /static/ files directly
    location /static/ {
        root /srv/stencila/hub/director;

        # Cache for up to 1hr
        add_header 'Cache-Control' 'public, max-age=3600';
    }

    # Serve /generated/ files directly
    location /generated/ {
        root /srv/stencila/hub/director;

        # Cache for up to 1hr
        add_header 'Cache-Control' 'public, max-age=3600';
    }

    # Redirect requests from `/get/` to `get.stenci.la`
    # This redirecting path is used for the `stencila.js` module (instead of just using get.stenci.la) because:
    #   (a) HTTPS is needed so don't get 'Mixed Content' error
    #   (b) HTTPS on S3 requires the following long URL (unless using CloudFront or paying for custom cert)
    #   (c) don't want to use this long URL in case move to another host (and cause its ugly)
    location ~ /get/(.*) {
        return 301 https://s3-us-west-2.amazonaws.com/get.stenci.la/$1;
    }

    # Internal locations used with [X-Accel-Redirect](http://wiki.nginx.org/X-accel)

    # Serve raw component files after a X-Accel-Redirect header from Django
    # components.views.raw (which is where authorization is done)
    location /internal-component-raw/ {
        internal;
        alias   /srv/stencila/store/;
        # Cache for up to 1hr
        add_header 'Cache-Control' 'public, max-age=3600';
        # CORS headers for serving js, css fonts etc across domains
        include /srv/stencila/hub/director/nginx-cors.conf;
    }

    # Serve curator/curator.go after a X-Accel-Redirect header from Django
    # components.views.git (which is where authorization is done)
    location /internal-component-git/ {
        internal;
        # Rewrite URL to strip prefix
        rewrite    ^/internal-component-git/(.*)$ /$1 break;
        # Pass to backend
        proxy_pass http://10.0.1.50:7311;
        # Nginx adds "charset=utf-8" to the Content-Type header if it not already there
        # While `git` is OK with that `libgit2` baulks at "Content-Type: application/x-git-upload-pack-advertisement; charset=utf-8"
        # The "charset off" should prevent this but doesn't so it is necessary to remove the header and add the orginal
        charset off;
        more_clear_headers 'Content-Type';
        add_header Content-Type $upstream_http_content_type;
        # Clear other headers which Nginx adds even though they are not usually a problem
        more_clear_headers 'Server' 'Connection';
        # Don't cache
        add_header 'Cache-Control' 'no-cache';
    }

    # Proxy to a session with Websockets
    # This is intended to go from wss:// to http:// to terminate the SSL
    # For example configs, see http://siriux.net/2013/06/nginx-and-websockets/ and elsewhere
    location ~ /internal-session-websocket/(.*) {
        internal;
        proxy_pass http://$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_read_timeout 86400;
    }

    # Serve the Django app by passing to uWSGI
    location / {
        uwsgi_pass unix:///tmp/stencila-director.socket;
        include uwsgi_params;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        # Don't cache
        add_header 'Cache-Control' 'no-cache';
        # CORS headers for AJAX access
        include /srv/stencila/hub/director/nginx-cors.conf;
    }
}

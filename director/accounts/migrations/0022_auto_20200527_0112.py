# Generated by Django 2.2.12 on 2020-05-27 01:12
import re

from django.conf import settings
from django.db import migrations, models
from django.db.models.signals import post_save

from users.models import User as U
# from accounts.models import create_personal_account_for_user

def upgrade_accounts(apps, schema_editor):
    """Upgrade accounts to match new account schema."""
    suffix = "-personal-account"

    Account = apps.get_model('accounts', 'Account')
    User = apps.get_model('auth', 'User')

    accounts = Account.objects.filter(name__endswith=suffix)

    for account in accounts:
        pattern = re.split(suffix, account.name)

        if pattern:
            name = pattern[0]
            user = User.objects.filter(username=name)

            if user.exists():
                user = user[0]
                account.user = user
                account.save()
                user.save()
                post_save.send(U, instance=user, created=False)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0018_auto_20200426_1815'),
    ]

    operations = [
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(blank=True, help_text="When set, this is the user assigned to a 'personal' account.", null=True, on_delete=models.deletion.SET_NULL, related_name='account_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('user', 'name')},
        ),
        migrations.RunPython(upgrade_accounts)
    ]
